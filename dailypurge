#!/bin/bash
DAYS="30"
TARGET="/var/log/package"

# Targets $TARGET directory for purging single files older than $DAYS.
#
# Designed for systems where you store 1 file a day in a directory and you
# want to keep it filled with last n files/days (i.e. 2018-01-01.log), not just
# purging by date (i.e. find /var/log/package/* -mtime +30 -exec echo {} \;) 
#
# Once installed somewhere (crontab, other scripts or any other triggers)
# you could freeze real operations on files by creating a temporary .purgelock 
# file into target directory. Output available for logging and debugging.
#
# I.e.: 
# $ dailypurge >> /var/log/dailypurge.log  2>&1

# Core function
purge () {
        for file in $(cat /tmp/.tmpall | grep -vf /tmp/.tmpsave); do
            if [ "$1" == "ro" ]; then
                echo "$TARGET"/$file
            elif [ "$1" == "rw" ]; then
                rm -v "$TARGET"/$file
            fi
        done
}

# Catch infos
ls -l  "$TARGET" | awk '{ print $NF }' | tail -n +2 > /tmp/.tmpall
ls -lr "$TARGET" | awk '{ print $NF }' | tail -n +2 | head -n $DAYS > /tmp/.tmpsave
ALL=$(wc -l /tmp/.tmpall | awk '{ print $1 }')

# Put together
if [ "$DAYS" -lt "$ALL" ]; then
   if [ ! -f $TARGET/.purgelock ]; then
        echo Purging file\(s\) by date limit for retention rules:
        purge rw
   else
        echo Warning: file\(s\) *NOT*  purged on $TARGET \(.purgelock present\):
        purge ro
   fi
else
        echo Info: no files to purge in $TARGET
fi

# Cleanup
rm /tmp/.tmpsave /tmp/.tmpall
